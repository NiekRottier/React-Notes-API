{"version":3,"sources":["Delete.js","Edit.js","Notedetails.js","Pagination.js","Notepad.js","Namechanger.js","CreateNote.js","App.js","index.js"],"names":["Delete","deleteNote","id","fetch","method","then","deletedNote","catch","error","console","log","props","resetActiveNote","reloadNotes","type","name","value","onClick","note","React","Component","Edit","refreshState","setState","title","body","author","openModal","modelOpen","closeModal","handleSubmit","requestOptions","headers","JSON","stringify","state","response","json","data","edittedNote","resData","reloadActiveNote","ReactModal","setAppElement","event","formTitle","target","this","formBody","className","overlayClassName","isOpen","onRequestClose","htmlFor","minLength","onChange","handleTitleChange","handleBodyChange","Notedetails","isNaN","date","Pagination","setFetchLink","pagination","_links","first","href","previous","next","last","Notepad","loadActiveNote","loadedActiveNote","activeNote","UrlId","window","location","pathname","replace","notes","map","index","totalItems","currentPage","totalPages","Namechanger","maxLength","placeholder","changeName","CreateNote","createdNote","App","link","fetchLink","loadNotes","loadedNotes","user","paginationData","items","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.dd315eeb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport class Delete extends React.Component {\r\n    constructor(){\r\n        super()\r\n        console.log(\"Created Delete\");\r\n    }\r\n\r\n    // DELETE functions\r\n    deleteNote = (id) => {\r\n        fetch(`https://docent.cmi.hro.nl/bootb/demo/notes/${id}`, { method: 'DELETE' })\r\n            .then(() => this.deletedNote(id))\r\n            .catch((error) => console.log(error));\r\n    }\r\n\r\n    deletedNote = (id) => {\r\n        console.log(`Deleted Note - ID: ${id}`);\r\n        this.props.resetActiveNote()\r\n        this.props.reloadNotes()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <input type=\"button\" name=\"Delete\" value=\"Delete\" onClick={() => this.deleteNote(this.props.note.id)} />\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport ReactModal from \"react-modal\";\r\n\r\nexport class Edit extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(\"Created Edit\");\r\n        this.state = {\r\n            modelOpen : false,\r\n            title : props.note.title,\r\n            body : props.note.body,\r\n            author : props.note.author,\r\n            resData : {}\r\n        }\r\n\r\n        ReactModal.setAppElement('#root');\r\n    }\r\n\r\n    refreshState = () => {\r\n        this.setState({\r\n            title : this.props.note.title,\r\n            body : this.props.note.body,\r\n            author : this.props.note.author\r\n        })\r\n    }\r\n\r\n    // Open and Close Modal\r\n    openModal = () => {\r\n        this.setState({ modelOpen : true })\r\n        console.log(\"Opened Modal\");\r\n\r\n        this.refreshState()\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ modelOpen : false })\r\n        console.log(\"Closed Modal\");\r\n    }\r\n\r\n    // Handle Form Changes\r\n    handleTitleChange(event){\r\n        let formTitle = event.target.value\r\n        this.setState({ title : formTitle })\r\n    }\r\n    \r\n    handleBodyChange(event){\r\n        let formBody = event.target.value\r\n        this.setState({ body : formBody })\r\n    }\r\n\r\n    // EDIT functions\r\n    handleSubmit = (id) => {\r\n        let requestOptions = {\r\n            method: 'PUT',\r\n            headers: { \r\n                'Content-Type' : 'application/json',\r\n                'Accept' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'title' : this.state.title,\r\n                'body' : this.state.body,\r\n                'author' : this.state.author\r\n            })\r\n        };\r\n\r\n        fetch(`http://docent.cmi.hro.nl/bootb/demo/notes/${this.props.note.id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.edittedNote(data))\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    edittedNote = (data) => {\r\n        console.log(`Editted Note - ID: ${data.id}`);\r\n        this.setState({ resData : data })\r\n\r\n        this.props.reloadActiveNote(data.id)\r\n        this.props.reloadNotes()\r\n        this.closeModal()\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <input type=\"button\" name=\"Edit\" value=\"Edit\" onClick={() => this.openModal()} />\r\n\r\n                <ReactModal\r\n                    className=\"modalContent\"\r\n                    overlayClassName=\"modalOverlay\"\r\n                    isOpen={this.state.modelOpen}\r\n                    onRequestClose={this.closeModal}>\r\n                           \r\n                    <form className=\"noteForm column-container\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" name=\"title\" minLength=\"3\" value={this.state.title} \r\n                            onChange={(event) => this.handleTitleChange(event)} />\r\n\r\n                        <label htmlFor=\"body\">Body</label>\r\n                        <input type=\"text\" name=\"body\" minLength=\"3\" value={this.state.body} \r\n                            onChange={(event) => this.handleBodyChange(event)} />\r\n\r\n                        <p>Author = <i>{this.state.author}</i></p>\r\n\r\n                        <input type=\"button\" value=\"Submit\" onClick={this.handleSubmit}/>\r\n                    </form>\r\n\r\n                    <small><i>click esc to close</i></small> \r\n                </ReactModal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport { Delete } from \"./Delete\";\r\nimport { Edit } from \"./Edit\";\r\n\r\nexport class Notedetails extends React.Component {\r\n    constructor(){\r\n        super()\r\n        console.log(\"Created Note\");\r\n    }\r\n\r\n    render(){\r\n        if (this.props.note && isNaN(this.props.note)) {\r\n            return (\r\n                <div className=\"note\">\r\n                    <h3>{this.props.note.title}</h3>\r\n                    <p>{this.props.note.body}</p>\r\n                    <small><p>{this.props.note.author} ----- <i>{this.props.note.date}</i></p></small>\r\n\r\n                    <Edit note={this.props.note} reloadNotes={this.props.reloadNotes} reloadActiveNote={this.props.reloadActiveNote}/>\r\n                    <Delete note={this.props.note} resetActiveNote={this.props.resetActiveNote} reloadNotes={this.props.reloadNotes} />\r\n                </div>\r\n            )\r\n        } else { return (<div className=\"note\"> Please select a note from the list </div>) }\r\n    }\r\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport class Pagination extends React.Component {\r\n    constructor(){\r\n        super()\r\n        console.log(\"Created Pagination\");\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"pagination\">\r\n                <input type=\"button\" value=\"First\" onClick={() => this.props.setFetchLink(this.props.pagination._links.first.href)} />\r\n                <input type=\"button\" value=\"<\" onClick={() => this.props.setFetchLink(this.props.pagination._links.previous.href)} />\r\n                <input type=\"button\" value=\">\" onClick={() => this.props.setFetchLink(this.props.pagination._links.next.href)} />\r\n                <input type=\"button\" value=\"Last\" onClick={() => this.props.setFetchLink(this.props.pagination._links.last.href)} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./styles.css\"\r\n\r\nimport { Notedetails } from \"./Notedetails\";\r\nimport { Pagination } from \"./Pagination\";\r\n\r\nexport class Notepad extends React.Component {\r\n    constructor(){\r\n        super()\r\n        console.log(\"Created Notepad\");\r\n        \r\n        let UrlId = window.location.pathname.replace('/', '')\r\n        console.log(`URL Id: ${UrlId}`);\r\n\r\n        if (UrlId) {\r\n            this.state = { activeNote : UrlId }\r\n            this.loadActiveNote(this.state.activeNote)\r\n        } else {\r\n            this.state = { activeNote : 0 }\r\n        }\r\n    }\r\n\r\n    // Fetches data from API, gets the JSON and sends it to loadedActiveNotes()\r\n    loadActiveNote = (id) => {\r\n        let headers = { 'Accept': 'application/json' };\r\n\r\n        fetch(`http://docent.cmi.hro.nl/bootb/demo/notes/${id}`, { headers })\r\n            .then((response) => response.json())\r\n            .then((data) => this.loadedActiveNote(data))\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    // Sets the state.activeNote to the API data\r\n    loadedActiveNote(data){\r\n        console.log(\"Details data loaded!\");\r\n        this.setState({\r\n            activeNote : data\r\n        })\r\n    }\r\n\r\n    resetActiveNote = () =>{\r\n        this.setState({ activeNote : 0 })\r\n    }\r\n\r\n    render(){\r\n        let notes = this.props.notes.map((note, index) => (\r\n            <div key={index} onClick={() => this.loadActiveNote(note.id)}>{note.title}</div>\r\n        ));\r\n\r\n        return (\r\n            <div className=\"notepad\">\r\n                <p>Total notes: {this.props.pagination.totalItems} -- \r\n                    Page: {this.props.pagination.currentPage}/{this.props.pagination.totalPages}</p>\r\n                <div className=\"row-container\">\r\n                    <div className=\"notes\">\r\n                        {notes}\r\n                        <Pagination pagination={this.props.pagination} setFetchLink={this.props.setFetchLink} />\r\n                    </div>\r\n                    \r\n                    <Notedetails note={this.state.activeNote} resetActiveNote={this.resetActiveNote}\r\n                        reloadNotes={this.props.reloadNotes} reloadActiveNote={this.loadActiveNote} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport class Namechanger extends React.Component {\r\n    constructor(){\r\n        super()\r\n        console.log(\"Created Namechanger\");\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"namechanger\">\r\n                {/* <label>Change name:</label> */}\r\n                <input type=\"text\" maxLength=\"40\" placeholder=\"Type your name here..\"\r\n                    onChange={(event) => this.props.changeName(event)} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport ReactModal from \"react-modal\";\r\n// import dateFormat from \"dateformat\"\r\n\r\nexport class CreateNote extends React.Component {\r\n    constructor(){\r\n        super()\r\n        console.log(\"Created CreateNote\");\r\n        this.state = {\r\n            modelOpen : false,\r\n            title : \"\",\r\n            body : \"\",\r\n            resData : {}\r\n        }\r\n\r\n        ReactModal.setAppElement('#root');\r\n    }\r\n\r\n    // Open and Close Modal\r\n    openModal = () => {\r\n        this.setState({ modelOpen : true })\r\n        console.log(\"Opened Modal\");\r\n    }\r\n\r\n    closeModal = () => {\r\n        this.setState({ modelOpen : false })\r\n        console.log(\"Closed Modal\");\r\n    }\r\n\r\n    // Handle Form Changes\r\n    handleTitleChange(event){\r\n        let formTitle = event.target.value\r\n        this.setState({ title : formTitle })\r\n    }\r\n    \r\n    handleBodyChange(event){\r\n        let formBody = event.target.value\r\n        this.setState({ body : formBody })\r\n    }\r\n\r\n    // POST functions\r\n    handleSubmit = () => {\r\n        let requestOptions = {\r\n            method: 'POST',\r\n            headers: { \r\n                'Content-Type' : 'application/json',\r\n                'Accept' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                'title' : this.state.title,\r\n                'body' : this.state.body,\r\n                'author' : this.props.author\r\n            })\r\n        };\r\n\r\n        fetch(\"http://docent.cmi.hro.nl/bootb/demo/notes/\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.createdNote(data))\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    createdNote(data){\r\n        console.log(\"Created a Note\");\r\n        // console.log(data);\r\n        this.setState({ resData : data })\r\n\r\n        this.props.reloadNotes()\r\n        this.closeModal()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"createNote\">\r\n                <input type=\"button\" value=\"Create Note\" onClick={this.openModal}/>\r\n\r\n                {/* Modal and all its settings */}\r\n                <ReactModal \r\n                    className=\"modalContent\"\r\n                    overlayClassName=\"modalOverlay\"\r\n                    isOpen={this.state.modelOpen}\r\n                    onRequestClose={this.closeModal}>\r\n                           \r\n                    <form className=\"noteForm column-container\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" name=\"title\" minLength=\"3\" value={this.state.title} \r\n                            onChange={(event) => this.handleTitleChange(event)} />\r\n\r\n                        <label htmlFor=\"body\">Body</label>\r\n                        <input type=\"text\" name=\"body\" minLength=\"3\" value={this.state.body} \r\n                            onChange={(event) => this.handleBodyChange(event)} />\r\n\r\n                        <p>Author = <i>{this.props.author}</i></p>\r\n\r\n                        <input type=\"button\" value=\"Submit\" onClick={this.handleSubmit}/>\r\n                    </form>\r\n\r\n                    <small><i>click esc to close</i></small> \r\n                </ReactModal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nimport { Notepad } from \"./Notepad\";\r\nimport { Namechanger } from \"./Namechanger\";\r\nimport { CreateNote } from \"./CreateNote\";\r\n\r\nexport class App extends React.Component {\r\n    constructor(){\r\n        super()\r\n        console.log(\"Hello World\");\r\n        this.state = {\r\n            user : \"unknown\",\r\n            fetchLink : \"http://docent.cmi.hro.nl/bootb/demo/notes/?start=1&limit=5\",\r\n            notes : [],\r\n            paginationData : {}\r\n        }\r\n\r\n        this.loadNotes()\r\n    }\r\n\r\n    setFetchLink = (link) => {\r\n        this.setState({ fetchLink : link })\r\n        console.log(`Set fetchLink to ${link}`);\r\n\r\n        this.loadNotes(link)\r\n    }\r\n\r\n    // Fetches data from API, gets the JSON and sends it to loadedNotes()\r\n    loadNotes = (link = this.state.fetchLink) => {\r\n        let headers = { 'Accept': 'application/json' };\r\n\r\n        fetch(link, { headers })\r\n            .then((response) => response.json())\r\n            .then((data) => this.loadedNotes(data))\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    // Sets the state.notes to the API data\r\n    loadedNotes(data){\r\n        console.log(\"Overview data loaded!\");\r\n        this.setState({\r\n            notes : data.items,\r\n            paginationData : data.pagination\r\n        })\r\n    }\r\n\r\n    // Change state.user to whatever is in the Namechanger form \r\n    changeName = (event) => {\r\n        this.setState({ user: event.target.value })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div id=\"app\">\r\n                <h1>{this.state.user}'s notes</h1>\r\n                <div className=\"row-container\">\r\n                    <Namechanger changeName = {this.changeName} />\r\n                    <CreateNote author={this.state.user} reloadNotes={this.loadNotes} />\r\n                </div>\r\n\r\n                {/* <p>Wanna see your notes?</p> */}\r\n                <Notepad notes={this.state.notes}  reloadNotes={this.loadNotes} \r\n                    pagination={this.state.paginationData} setFetchLink={this.setFetchLink} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport { App } from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}